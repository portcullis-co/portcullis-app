name: Deploy Bulker

on:
  workflow_dispatch:
    inputs:
      org_id:
        description: 'Organization ID for deployment'
        required: true
        type: string
      data:
        description: 'Data to send to Bulker'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and configure Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_TOKEN }}
          github_token: ${{ secrets.REPO_TOKEN }}

      - name: Set PORTCULLIS_VERSION if not set
        run: |
          if [ -z "${{ env.PORTCULLIS_VERSION }}" ]; then
            echo "PORTCULLIS_VERSION=red-coral" >> $GITHUB_ENV
          fi

      - name: Create Koyeb Application and Service
        run: |
          # First create the application (this is idempotent - won't fail if it exists)
          APP_NAME="portcullis-${{ env.PORTCULLIS_VERSION }}"
          koyeb app create $APP_NAME || true

          # Then create the service within the application
          koyeb service create bulker \
            --app $APP_NAME \
            --docker jitsucom/bulker:latest \
            --env BULKER_BATCH_RUNNER_DEFAULT_BATCH_SIZE=10000 \
            --env BULKER_CONFIG_SOURCE=${{ secrets.BULKER_CONFIG_SOURCE }} \
            --env BULKER_CONFIG_SOURCE_HTTP_AUTH_TOKEN=${{ secrets.BULKER_CONFIG_SOURCE_HTTP_AUTH_TOKEN }} \
            --env BULKER_KAFKA_BOOTSTRAP_SERVERS=${{ secrets.BULKER_KAFKA_BOOTSTRAP_SERVERS }} \
            --env BULKER_KAFKA_SSL=true \
            --env BULKER_CLICKHOUSE_HOST=${{ secrets.BULKER_CLICKHOUSE_HOST }} \
            --env BULKER_CLICKHOUSE_DATABASE=${{ secrets.BULKER_CLICKHOUSE_DATABASE }} \
            --env BULKER_CLICKHOUSE_SSL=true \
            --env BULKER_CLICKHOUSE_USERNAME=${{ secrets.BULKER_CLICKHOUSE_USERNAME }} \
            --env BULKER_CLICKHOUSE_PASSWORD=${{ secrets.BULKER_CLICKHOUSE_PASSWORD }} \
            --env BULKER_KAFKA_TOPIC_PREFIX=${{ github.event.inputs.org_id }} \
            --env REPO_TOKEN=${{ secrets.REPO_TOKEN }} \
            --env BULKER_INPUT_DATA=${{ github.event.inputs.data }} \
            --ports 8080:http \
            --routes /${{ github.event.inputs.org_id }}/bulker:8080 \
            --regions aws-us-east-1