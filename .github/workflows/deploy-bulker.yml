name: Deploy Bulker

on:
  workflow_dispatch:
    inputs:
      org_id:
        description: 'Organization ID for deployment'
        required: true
        type: string
      data:
        description: 'Data to send to Bulker'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and configure Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_TOKEN }}
          github_token: ${{ secrets.REPO_TOKEN }}

      - name: Create env file
        run: |
          cat << EOF > .env
          BULKER_BATCH_RUNNER_DEFAULT_BATCH_SIZE=10000
          BULKER_CONFIG_SOURCE=${{ secrets.BULKER_CONFIG_SOURCE }}
          BULKER_CONFIG_SOURCE_HTTP_AUTH_TOKEN=${{ secrets.BULKER_CONFIG_SOURCE_HTTP_AUTH_TOKEN }}
          BULKER_KAFKA_BOOTSTRAP_SERVERS=${{ secrets.BULKER_KAFKA_BOOTSTRAP_SERVERS }}
          BULKER_KAFKA_SSL=true
          BULKER_CLICKHOUSE_HOST=${{ secrets.BULKER_CLICKHOUSE_HOST }}
          BULKER_CLICKHOUSE_DATABASE=${{ secrets.BULKER_CLICKHOUSE_DATABASE }}
          BULKER_CLICKHOUSE_SSL=true
          BULKER_CLICKHOUSE_USERNAME=${{ secrets.BULKER_CLICKHOUSE_USERNAME }}
          BULKER_CLICKHOUSE_PASSWORD=${{ secrets.BULKER_CLICKHOUSE_PASSWORD }}
          BULKER_KAFKA_TOPIC_PREFIX=${{ github.event.inputs.org_id }}
          REPO_TOKEN=${{ secrets.REPO_TOKEN }}
          BULKER_INPUT_DATA=${{ github.event.inputs.data }}
          EOF

      - name: Deploy Bulker to Koyeb
        run: |
          SERVICE_NAME="${{ github.event.inputs.org_id }}/bulker"
          koyeb service redeploy $SERVICE_NAME \
            --image jitsucom/bulker:latest \
            --env-file .env \
            --ports 8080:http \
            --routes /${{ github.event.inputs.org_id }}/bulker:8080 \
            --regions aws-us-east-1